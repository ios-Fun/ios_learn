
问题：比较分析coreData和fmdb的优缺点：

coredata除了你提到的几点收益外（可视化编辑，关联关系创建，数据库升级支持）
还有最核心的两点
1、多级数据缓存的管理（没缓存，你总不能每次更新数据，都阻塞一下，重复查询的数据，每次都select下）
2、tableview自动更新（NSFetchedResultController，观察每条数据，当有变化时，可以自动捕获，然后按需排序，触发回调更新页面，告你tableview要从第几行插入或者删除什么数据，某行数据要移动到哪行，当然这个frc还可以衍生出很多的其他数据观察特性）

我认为这两点才是coredata最核心的两个功能，需求或者开发上没用到这些功能，根本谈不上真正的使用coredata，也不适合使用coredata。

coredata不仅仅是数据库，而是整套数据存储到页面数据刷新的一整套解决方案，拿去和sqlite等比拼数据库性能，根本不公平。

问题：用过Core Data 或者 SQLite吗？读写是分线程的吗？遇到过死锁没？如何解决的？

115. ios 平台怎么做数据的持久化?coredata 和sqlite有无必然联系？coredata是一个关系型数据库吗？

答：iOS 中可以有四种持久化数据的方式：属性列表(plist)、对象归档、 SQLite3 和 Core Data； core data 可以使你以图形界面的方式快速的定义 app 的数据模型，同时在你的代码中容易获取到它。 coredata 提供了基础结构去处理常用的功能，例如保存，恢复，撤销和重做，允许你在 app 中继续创建新的任务。在使用 core data 的时候，你不用安装额外的数据库系统，因为 core data 使用内置的 sqlite 数据库。 core data 将你 app 的模型层放入到一组定义在内存中的数据对象。 coredata 会追踪这些对象的改变，同时可以根据需要做相反的改变，例如用户执行撤销命令。当 core data 在对你 app 数据的改变进行保存的时候， core data 会把这些数据归档，并永久性保存。 mac os x 中sqlite 库，它是一个轻量级功能强大的关系数据引擎，也很容易嵌入到应用程序。可以在多个平台使用， sqlite 是一个轻量级的嵌入式 sql 数据库编程。与 core data 框架不同的是， sqlite 是使用程序式的， sql 的主要的 API 来直接操作数据表。 Core Data 不是一个关系型数据库，也不是关系型数据库管理系统 (RDBMS) 。虽然 Core Dta 支持SQLite 作为一种存储类型，但它不能使用任意的 SQLite 数据库。 Core Data 在使用的过程种自己创建这个数据库。 Core Data 支持对一、对多的关系。




